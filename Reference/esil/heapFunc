decl
	integer initialize2();
	integer allocate2();
	integer free2(integer addr);
	integer array[256];
	integer nextFreeSpace;
enddecl
integer main(){
decl
	integer pointer;
enddecl
begin
	pointer = initialize2();
	pointer = allocate2();
	write(pointer);
	pointer = free2(pointer);
	write(pointer);
    return 0;
end
}
integer initialize2(){
decl
	integer i;
enddecl
begin
	nextFreeSpace = 0;
    i = 0;
	while(i<256) do
		array[i] = 0;
		i = i+1;
	endwhile;
	
	i = 0;
	while(i<248) do
		array[i] = i+8;
		i = i+8;
	endwhile;
	
	array[i] = 0-1;
	
	return 0;
end
}

integer allocate2(){
decl
	integer i;
enddecl
begin
	i = nextFreeSpace;
	if(nextFreeSpace != (0-1)) then
		nextFreeSpace = array[nextFreeSpace];
	endif;
	return i;
end
}
integer free2(integer &addr){
decl
	integer i;
enddecl
begin
	array[addr] = nextFreeSpace;
	nextFreeSpace = addr;
	addr = 0-1;
	return 0;
end
}